name: Flutter Integration Tests (Headless)

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  android-integration:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: flutter pub get
        run: flutter pub get

      - name: Run integration tests on headless emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          # Lighter image = faster, fewer offline issues
          api-level: 30
          target: default                # avoid google_apis for reliability
          arch: x86_64
          profile: pixel_4
          force-avd-creation: true
          boot-timeout: 1200             # give it time when SW-rendering
          disable-animations: true
          emulator-options: >-
            -no-snapshot
            -no-snapshot-save
            -no-boot-anim
            -noaudio
            -gpu swiftshader_indirect
            -no-window
            -accel off
          script: |
            set -euxo pipefail

            # Make sure adb is healthy
            adb start-server || true

            # Wait for device to appear
            adb wait-for-device

            # Sometimes the device is "offline" right after boot; bounce adb
            adb devices || true
            adb kill-server || true
            adb start-server
            adb wait-for-device

            # Wait until sys.boot_completed == 1 (hard wait)
            for i in $(seq 1 120); do
              BOOTED=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
              if [ "$BOOTED" = "1" ]; then
                echo "Emulator fully booted."
                break
              fi
              echo "Waiting for boot... ($i/120)"
              sleep 5
            done

            # Final sanity: if still offline, fail early
            adb shell getprop ro.build.version.release

            # Quality-of-life: kill animations again & unlock
            adb shell settings put global window_animation_scale 0
            adb shell settings put global transition_animation_scale 0
            adb shell settings put global animator_duration_scale 0
            adb shell input keyevent 82 || true

            flutter doctor -v
            flutter build apk --debug

            # Run the integration tests (auto-pick the only emulator)
            flutter devices
            flutter test integration_test/app_test.dart

            # Tear down cleanly to avoid runner teardown flake
            adb emu kill || true
